name: Static Analysis

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  kt_lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get base depth
        id: base-depth
        run: |
          if [ "$GITHUB_EVENT_NAME" = "pull_request" ]; then
              BASE_DEPTH="$(expr $NUMBER_OF_COMMITS + 1)"
          elif [ "$GITHUB_EVENT_NAME" = "push" ]; then
              BASE_DEPTH="2"
          else
              BASE_DEPTH="1"
          fi

          echo "base-depth=$BASE_DEPTH" >> $GITHUB_OUTPUT
        env:
          NUMBER_OF_COMMITS: ${{ github.event.pull_request.commits || 1 }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: ${{ steps.base-depth.outputs.base-depth }}

      - name: Get changed files
        id: changed_files
        working-directory: ./scripts
        run: |
          source "./get_changed_files.sh"
          FILES_LIST=$(get_changed_files $NUMBER_OF_COMMITS)
          echo "files_list=$FILES_LIST" >> $GITHUB_OUTPUT
        env:
          NUMBER_OF_COMMITS: ${{ github.event.pull_request.commits || 1 }}

      - name: Restore KtLint Cache
        uses: actions/cache/restore@v4
        with:
          path: ./lint
          key: kt-lint

      - name: Fetch Kt Lint
        id: fetch_kt_lint
        working-directory: ./scripts
        run: |
          source "./kt_lint.sh"
          get_kt_lint "$KTLINT_DIR"
        env:
          KTLINT_DIR: ${{ github.workspace }}/lint/ktlint

      - name: Fetch Kt Lint Rules
        id: fetch_kt_lint_rules
        working-directory: ./scripts
        run: |
          source "./kt_lint.sh"
          get_compose_ruleset "$KTLINT_RULES_DIR"
        env:
          KTLINT_RULES_DIR: ${{ github.workspace }}/lint/ktlint-rules

      - name: Run Kt Lint
        id: run_kt_lint
        continue-on-error: true
        run: |
          CHANGED_FILES="$(echo '${{ steps.changed_files.outputs.files_list }}' | jq -r 'join(" ")')"
          if [ -z "$CHANGED_FILES" ]; then
              echo "No changed files to lint."
              exit 0
          fi
          
          "${KTLINT_EXECUTABLE_PATH}" \
              --ruleset="${COMPOSE_RULESET_JAR_PATH}" \
              $CHANGED_FILES \
              --reporter=json?group_by_file,output="$REPORTER_OUTPUT_FILE"
        env:
          KTLINT_EXECUTABLE_PATH: ${{ github.workspace }}/lint/ktlint/ktlint
          COMPOSE_RULESET_JAR_PATH: ${{ github.workspace }}/lint/ktlint-rules/compose-ruleset.jar
          REPORTER_OUTPUT_FILE: ${{ github.workspace }}/lint/ktlint-report.json

      - name: Kt Lint Report Summary
        working-directory: ./scripts
        run: |
          source "./report_kt_lint.sh"
          echo "$(convert_json_to_markdown $KT_LINT_REPORT)" >> $GITHUB_STEP_SUMMARY
        env:
          KT_LINT_REPORT: ${{ github.workspace }}/lint/ktlint-report.json

      - name: Annotate PR with Kt Lint Issues
        working-directory: ./scripts
        run: |
          source "./report_kt_lint.sh"
          echo "Annotating PR with Kt Lint issues..."
          if [ -s $KT_LINT_REPORT ]; then
              echo "Issues found, annotating..."
              annotate_kt_lint "$KT_LINT_REPORT"
          else
              echo "No issues found."
          fi
        env:
          KT_LINT_REPORT: ${{ github.workspace }}/lint/ktlint-report.json

      - name: Upload Kt Lint Cache
        uses: actions/cache/save@v4
        if: always()
        with:
          path: ./lint
          key: kt-lint